// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DictMatchAssertion shallow renders the correct HTML structure 1`] = `
<DictBaseAssertion
  buttonGroup={
    <DictButtonGroup
      defaultSortType={3}
      flattenedDict={
        Array [
          Array [
            0,
            "foo",
            "Passed",
            Array [
              "int",
              "1",
            ],
            Array [
              "int",
              "1",
            ],
          ],
          Array [
            0,
            "bar",
            "Failed",
            Array [
              "int",
              "2",
            ],
            Array [
              "int",
              "5",
            ],
          ],
          Array [
            0,
            "extra-key",
            "Failed",
            Array [
              null,
              "ABSENT",
            ],
            Array [
              "int",
              "10",
            ],
          ],
        ]
      }
      setRowData={[Function]}
      sortTypeList={
        Array [
          1,
          2,
          3,
          4,
        ]
      }
    />
  }
  columnDefs={
    Array [
      Object {
        "field": "descriptor",
        "headerName": "Descriptor",
        "hide": true,
      },
      Object {
        "cellRendererFramework": [Function],
        "cellStyle": [Function],
        "field": "key",
        "headerName": "Key",
        "pinned": "left",
        "suppressMovable": true,
      },
      Object {
        "cellRendererFramework": [Function],
        "cellStyle": [Function],
        "field": "expected",
        "headerName": "Expected",
      },
      Object {
        "cellRendererFramework": [Function],
        "cellStyle": [Function],
        "field": "value",
        "headerName": "Value",
      },
    ]
  }
  rowData={
    Array [
      Object {
        "descriptor": Object {
          "indent": 0,
          "isEmptyLine": false,
          "isListKey": false,
          "lineNo": 524,
          "status": "Failed",
        },
        "expected": Object {
          "type": "int",
          "value": "5",
        },
        "key": Object {
          "type": "key",
          "value": "bar",
        },
        "value": Object {
          "type": "int",
          "value": "2",
        },
      },
      Object {
        "descriptor": Object {
          "indent": 0,
          "isEmptyLine": false,
          "isListKey": false,
          "lineNo": 524,
          "status": "Failed",
        },
        "expected": Object {
          "type": "int",
          "value": "10",
        },
        "key": Object {
          "type": "key",
          "value": "extra-key",
        },
        "value": Object {
          "type": null,
          "value": "ABSENT",
        },
      },
      Object {
        "descriptor": Object {
          "indent": 0,
          "isEmptyLine": false,
          "isListKey": undefined,
          "lineNo": 524,
          "status": "Passed",
        },
        "expected": Object {
          "type": "int",
          "value": "1",
        },
        "key": Object {
          "type": "key",
          "value": "foo",
        },
        "value": Object {
          "type": "int",
          "value": "1",
        },
      },
    ]
  }
/>
`;
